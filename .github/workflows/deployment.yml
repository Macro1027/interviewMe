name: AI Interview Platform Deployment

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Build Python package
      run: |
        python -m pip install --upgrade pip build
        python -m build
    
    - name: Set up Node.js for frontend
      if: hashFiles('frontend/package.json') != ''
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Build frontend
      if: hashFiles('frontend/package.json') != ''
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist/
          frontend/build/
          cloud_infra/

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment:
      name: staging
      url: https://staging.interview-ai-platform.com
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    
    - name: Set up cloud CLI tools
      run: |
        # For example, installing AWS CLI or Google Cloud SDK
        # aws-cli
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        
        # or for GCP
        # echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        # curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        # sudo apt-get update && sudo apt-get install google-cloud-cli
    
    - name: Configure cloud provider credentials
      run: |
        # Example for AWS
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
        
        # or for GCP
        # echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" > gcp-key.json
        # gcloud auth activate-service-account --key-file=gcp-key.json
        # gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Deploy to staging
      run: |
        # Run the deployment script
        ./cloud_infra/deploy.sh staging
    
    - name: Run smoke tests
      run: |
        ./cloud_infra/smoke_test.sh https://staging.interview-ai-platform.com

  deploy-production:
    needs: [build, deploy-staging]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://interview-ai-platform.com
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
    
    - name: Set up cloud CLI tools
      run: |
        # For example, installing AWS CLI or Google Cloud SDK
        # aws-cli
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
    
    - name: Configure cloud provider credentials
      run: |
        # Example for AWS
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}
    
    - name: Deploy to production
      run: |
        # Run the deployment script
        ./cloud_infra/deploy.sh production
    
    - name: Run smoke tests
      run: |
        ./cloud_infra/smoke_test.sh https://interview-ai-platform.com
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*
        body_path: CHANGELOG.md
        draft: false
        prerelease: false 