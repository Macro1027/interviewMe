[pytest]
testpaths = src/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that verify component interactions
    benchmark: Performance benchmark tests
    slow: Tests that take longer to run
    asyncio: Tests that use asyncio features
    api: Tests for API endpoints
    db: Tests that interact with databases
    mock: Tests that use mocked dependencies
    e2e: End-to-end tests simulating user interactions

addopts = --strict-markers -v

# Default timeout for tests
timeout = 60

# Configure benchmark options
benchmark_warmup = false
benchmark_disable_gc = true
benchmark_min_rounds = 5

# Configure test coverage options
filterwarnings =
    ignore::DeprecationWarning:pkg_resources.*:
    ignore::DeprecationWarning:tensorflow.*:
    ignore::FutureWarning:tensorboard.*:
    ignore::UserWarning:torch.*:

# Environment variable configuration
env =
    D:PYTHONHASHSEED=0
    D:PYTHONDONTWRITEBYTECODE=1
    D:PYTHONPATH=. 